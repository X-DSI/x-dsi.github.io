{"ast":null,"code":"var _jsxFileName = \"/home/xlinux/repos/x-dsi.github.io/src/components/Layout/Layout.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport { LayoutWrapper, LayoutContent, LayoutContainer } from \"./Layout.styled\";\nimport { ThemeProvider } from \"styled-components\";\nimport GlobalStyles from \"../../styles/Global.Styled\";\nimport { darkTheme, lightTheme } from \"../../styles/themes\";\nimport SideBar from \"../SideBar/SideBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Layout = props => {\n  _s();\n\n  const [currentTheme, setCurrentTheme] = useState(lightTheme);\n  const [isDark, setIsDark] = useState(false);\n\n  const themeChangeHandler = () => {\n    if (currentTheme.id === \"light\") {\n      setCurrentTheme(darkTheme);\n    } else {\n      setCurrentTheme(lightTheme);\n    }\n\n    setIsDark(!isDark);\n  };\n\n  const [isSideBarOpen, setIsSideBarOpen] = useState(false);\n\n  const toggleSideBar = () => {\n    setIsSideBarOpen(!isSideBarOpen);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: currentTheme,\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyles, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LayoutWrapper, {\n      children: /*#__PURE__*/_jsxDEV(LayoutContainer, {\n        children: [/*#__PURE__*/_jsxDEV(SideBar, {\n          isSideBarOpen: isSideBarOpen,\n          toggleSideBar: toggleSideBar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: /*#__PURE__*/_jsxDEV(Header, {\n            isDarkTheme: isDark,\n            themeChangefunc: themeChangeHandler,\n            toggleSideBar: toggleSideBar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LayoutContent, {\n          children: props.children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Layout, \"I6W8YV4j6TM+hYZ6g+Org+KdRqU=\");\n\n_c = Layout;\nexport default Layout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"sources":["/home/xlinux/repos/x-dsi.github.io/src/components/Layout/Layout.js"],"names":["React","useState","Header","Footer","LayoutWrapper","LayoutContent","LayoutContainer","ThemeProvider","GlobalStyles","darkTheme","lightTheme","SideBar","Layout","props","currentTheme","setCurrentTheme","isDark","setIsDark","themeChangeHandler","id","isSideBarOpen","setIsSideBarOpen","toggleSideBar","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,aAAT,EAAwBC,aAAxB,EAAuCC,eAAvC,QAA8D,iBAA9D;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,qBAAtC;AACA,OAAOC,OAAP,MAAoB,oBAApB;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAACS,UAAD,CAAhD;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMiB,kBAAkB,GAAG,MAAM;AAC/B,QAAIJ,YAAY,CAACK,EAAb,KAAoB,OAAxB,EAAiC;AAC/BJ,MAAAA,eAAe,CAACN,SAAD,CAAf;AACD,KAFD,MAEO;AACLM,MAAAA,eAAe,CAACL,UAAD,CAAf;AACD;;AACDO,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACD,GAPD;;AASA,QAAM,CAACI,aAAD,EAAgBC,gBAAhB,IAAoCpB,QAAQ,CAAC,KAAD,CAAlD;;AACA,QAAMqB,aAAa,GAAG,MAAM;AAC1BD,IAAAA,gBAAgB,CAAC,CAACD,aAAF,CAAhB;AACD,GAFD;;AAIA,sBACE,QAAC,aAAD;AAAe,IAAA,KAAK,EAAEN,YAAtB;AAAA,4BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,aAAD;AAAA,6BACE,QAAC,eAAD;AAAA,gCACE,QAAC,OAAD;AACE,UAAA,aAAa,EAAEM,aADjB;AAEE,UAAA,aAAa,EAAEE;AAFjB;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,iCACE,QAAC,MAAD;AACE,YAAA,WAAW,EAAEN,MADf;AAEE,YAAA,eAAe,EAAEE,kBAFnB;AAGE,YAAA,aAAa,EAAEI;AAHjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBALF,eAaE,QAAC,aAAD;AAAA,oBAAgBT,KAAK,CAACU;AAAtB;AAAA;AAAA;AAAA;AAAA,gBAbF,eAcE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CA1CD;;GAAMX,M;;KAAAA,M;AA4CN,eAAeA,MAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport { LayoutWrapper, LayoutContent, LayoutContainer } from \"./Layout.styled\";\nimport { ThemeProvider } from \"styled-components\";\nimport GlobalStyles from \"../../styles/Global.Styled\";\nimport { darkTheme, lightTheme } from \"../../styles/themes\";\nimport SideBar from \"../SideBar/SideBar\";\n\nconst Layout = (props) => {\n  const [currentTheme, setCurrentTheme] = useState(lightTheme);\n  const [isDark, setIsDark] = useState(false);\n\n  const themeChangeHandler = () => {\n    if (currentTheme.id === \"light\") {\n      setCurrentTheme(darkTheme);\n    } else {\n      setCurrentTheme(lightTheme);\n    }\n    setIsDark(!isDark);\n  };\n\n  const [isSideBarOpen, setIsSideBarOpen] = useState(false);\n  const toggleSideBar = () => {\n    setIsSideBarOpen(!isSideBarOpen);\n  };\n\n  return (\n    <ThemeProvider theme={currentTheme}>\n      <GlobalStyles />\n\n      <LayoutWrapper>\n        <LayoutContainer>\n          <SideBar\n            isSideBarOpen={isSideBarOpen}\n            toggleSideBar={toggleSideBar}\n          />\n          <div className=\"header\">\n            <Header\n              isDarkTheme={isDark}\n              themeChangefunc={themeChangeHandler}\n              toggleSideBar={toggleSideBar}\n            />\n          </div>\n\n          <LayoutContent>{props.children}</LayoutContent>\n          <Footer />\n        </LayoutContainer>\n      </LayoutWrapper>\n    </ThemeProvider>\n  );\n};\n\nexport default Layout;\n"]},"metadata":{},"sourceType":"module"}